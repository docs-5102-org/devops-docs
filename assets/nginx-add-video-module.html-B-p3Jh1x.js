import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a,o as e}from"./app-aR2NjaSw.js";const l={};function t(h,i){return e(),n("div",null,i[0]||(i[0]=[a(`<h1 id="nginx添加mp4、flv模块教程" tabindex="-1"><a class="header-anchor" href="#nginx添加mp4、flv模块教程"><span>Nginx添加MP4、FLV模块教程</span></a></h1><h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>本教程介绍如何在已安装的Nginx服务器中添加MP4和FLV流媒体模块，以支持视频文件的HTTP流式传输。</p><h2 id="前提条件" tabindex="-1"><a class="header-anchor" href="#前提条件"><span>前提条件</span></a></h2><ul><li>已安装的Nginx服务器</li><li>具有root权限</li><li>保留原始Nginx安装目录和源码</li></ul><h2 id="步骤详解" tabindex="-1"><a class="header-anchor" href="#步骤详解"><span>步骤详解</span></a></h2><h3 id="_1-查看当前nginx编译参数" tabindex="-1"><a class="header-anchor" href="#_1-查看当前nginx编译参数"><span>1. 查看当前Nginx编译参数</span></a></h3><p>首先查看当前Nginx的编译配置，以确保新编译时保持原有功能：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nginx</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -V</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>示例输出：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>configure arguments: --user=www --group=www --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module --with-http_gzip_static_module</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_2-进入nginx源码目录" tabindex="-1"><a class="header-anchor" href="#_2-进入nginx源码目录"><span>2. 进入Nginx源码目录</span></a></h3><p>进入之前安装Nginx时使用的源码目录。例如使用lnmp1.0脚本安装的情况：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /root/lnmp1.0-full/nginx-1.4.3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p><strong>注意</strong>：请根据您的实际安装路径和版本号调整目录名称。</p></blockquote><h3 id="_3-备份当前nginx可执行文件" tabindex="-1"><a class="header-anchor" href="#_3-备份当前nginx可执行文件"><span>3. 备份当前Nginx可执行文件</span></a></h3><p>在重新编译前，备份当前的Nginx可执行文件：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/nginx/sbin/nginx</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/nginx/sbin/nginx.old</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_4-重新配置编译参数" tabindex="-1"><a class="header-anchor" href="#_4-重新配置编译参数"><span>4. 重新配置编译参数</span></a></h3><p>使用原有配置参数，并添加MP4和FLV模块：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./configure</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --user=www</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --group=www</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --prefix=/usr/local/nginx</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --with-http_stub_status_module</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --with-http_ssl_module</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --with-http_gzip_static_module</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --with-http_mp4_module</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --with-http_flv_module</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-验证配置结果" tabindex="-1"><a class="header-anchor" href="#_5-验证配置结果"><span>5. 验证配置结果</span></a></h3><p>配置完成后，检查输出信息确认无错误。正常情况下应显示：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>Configuration summary</span></span>
<span class="line"><span>+ using system PCRE library</span></span>
<span class="line"><span>+ using system OpenSSL library</span></span>
<span class="line"><span>+ md5: using OpenSSL library</span></span>
<span class="line"><span>+ sha1: using OpenSSL library</span></span>
<span class="line"><span>+ using system zlib library</span></span>
<span class="line"><span></span></span>
<span class="line"><span>nginx path prefix: &quot;/usr/local/nginx&quot;</span></span>
<span class="line"><span>nginx binary file: &quot;/usr/local/nginx/sbin/nginx&quot;</span></span>
<span class="line"><span>nginx configuration prefix: &quot;/usr/local/nginx/conf&quot;</span></span>
<span class="line"><span>nginx configuration file: &quot;/usr/local/nginx/conf/nginx.conf&quot;</span></span>
<span class="line"><span>nginx pid file: &quot;/usr/local/nginx/logs/nginx.pid&quot;</span></span>
<span class="line"><span>nginx error log file: &quot;/usr/local/nginx/logs/error.log&quot;</span></span>
<span class="line"><span>nginx http access log file: &quot;/usr/local/nginx/logs/access.log&quot;</span></span>
<span class="line"><span>nginx http client request body temporary files: &quot;client_body_temp&quot;</span></span>
<span class="line"><span>nginx http proxy temporary files: &quot;proxy_temp&quot;</span></span>
<span class="line"><span>nginx http fastcgi temporary files: &quot;fastcgi_temp&quot;</span></span>
<span class="line"><span>nginx http uwsgi temporary files: &quot;uwsgi_temp&quot;</span></span>
<span class="line"><span>nginx http scgi temporary files: &quot;scgi_temp&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-编译nginx" tabindex="-1"><a class="header-anchor" href="#_6-编译nginx"><span>6. 编译Nginx</span></a></h3><p>执行编译命令：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">make</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p><strong>重要提醒</strong>：只执行<code>make</code>命令，不要执行<code>make install</code>，以避免覆盖配置文件。</p></blockquote><h3 id="_7-测试配置文件" tabindex="-1"><a class="header-anchor" href="#_7-测试配置文件"><span>7. 测试配置文件</span></a></h3><p>在安装新版本前，测试配置文件语法：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nginx</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>正常情况下应显示：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>nginx: the configuration file /usr/local/nginx/conf/nginx.conf syntax is ok</span></span>
<span class="line"><span>nginx: configuration file /usr/local/nginx/conf/nginx.conf test is successful</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-安装新版本" tabindex="-1"><a class="header-anchor" href="#_8-安装新版本"><span>8. 安装新版本</span></a></h3><p>如果测试通过，执行安装：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">make</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_9-验证安装结果" tabindex="-1"><a class="header-anchor" href="#_9-验证安装结果"><span>9. 验证安装结果</span></a></h3><p>检查新版本是否正确安装：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nginx</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -V</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>应该显示包含新模块的配置信息：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>nginx version: nginx/1.4.3</span></span>
<span class="line"><span>built by gcc 4.4.7 20120313 (Red Hat 4.4.7-3) (GCC)</span></span>
<span class="line"><span>TLS SNI support enabled</span></span>
<span class="line"><span>configure arguments: --user=www --group=www --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module --with-http_gzip_static_module --with-http_mp4_module --with-http_flv_module</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="模块功能说明" tabindex="-1"><a class="header-anchor" href="#模块功能说明"><span>模块功能说明</span></a></h2><h3 id="http-mp4模块" tabindex="-1"><a class="header-anchor" href="#http-mp4模块"><span>HTTP MP4模块</span></a></h3><ul><li><strong>功能</strong>：为MP4文件提供HTTP流式传输支持</li><li><strong>特点</strong>：支持视频拖拽、快进快退等功能</li><li><strong>使用场景</strong>：在线视频播放、点播服务</li></ul><h3 id="http-flv模块" tabindex="-1"><a class="header-anchor" href="#http-flv模块"><span>HTTP FLV模块</span></a></h3><ul><li><strong>功能</strong>：为FLV文件提供HTTP流式传输支持</li><li><strong>特点</strong>：支持Flash视频的流式播放</li><li><strong>使用场景</strong>：Flash视频播放、直播回放</li></ul><h2 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项"><span>注意事项</span></a></h2><ol><li><strong>备份重要性</strong>：重新编译前务必备份原有可执行文件</li><li><strong>模块兼容性</strong>：所使用的模块都是Nginx官方支持的内置模块</li><li><strong>配置保持</strong>：新编译时保持原有的所有配置参数</li><li><strong>测试验证</strong>：安装前先测试配置文件语法正确性</li><li><strong>版本一致性</strong>：确保使用相同版本的源码进行重新编译</li></ol><h2 id="故障排除" tabindex="-1"><a class="header-anchor" href="#故障排除"><span>故障排除</span></a></h2><h3 id="如果编译失败" tabindex="-1"><a class="header-anchor" href="#如果编译失败"><span>如果编译失败</span></a></h3><ol><li>检查系统依赖包是否完整</li><li>确认源码目录和版本正确</li><li>查看编译错误日志定位问题</li></ol><h3 id="如果配置测试失败" tabindex="-1"><a class="header-anchor" href="#如果配置测试失败"><span>如果配置测试失败</span></a></h3><ol><li>检查配置文件语法</li><li>确认路径和权限设置正确</li><li>对比备份的配置文件</li></ol><h3 id="回滚方案" tabindex="-1"><a class="header-anchor" href="#回滚方案"><span>回滚方案</span></a></h3><p>如果出现问题，可以快速回滚：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/nginx/sbin/nginx.old</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/nginx/sbin/nginx</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>通过以上步骤，您已成功为Nginx添加了MP4和FLV流媒体模块。这两个模块将为您的Web服务器提供强大的视频流式传输能力，支持现代Web应用的多媒体需求。</p>`,58)]))}const p=s(l,[["render",t]]),o=JSON.parse(`{"path":"/linux/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E4%B8%8E%E5%8C%85%E7%AE%A1%E7%90%86/nginx-add-video-module.html","title":"nginx视频模块-流媒体服务配置","lang":"zh-CN","frontmatter":{"title":"nginx视频模块-流媒体服务配置","category":["Linux","软件安装与包管理"],"tag":["nginx","视频模块","流媒体"],"date":"2022-09-23T00:00:00.000Z","description":"Nginx添加MP4、FLV模块教程 概述 本教程介绍如何在已安装的Nginx服务器中添加MP4和FLV流媒体模块，以支持视频文件的HTTP流式传输。 前提条件 已安装的Nginx服务器 具有root权限 保留原始Nginx安装目录和源码 步骤详解 1. 查看当前Nginx编译参数 首先查看当前Nginx的编译配置，以确保新编译时保持原有功能： 示例输...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"nginx视频模块-流媒体服务配置\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-09-23T00:00:00.000Z\\",\\"dateModified\\":\\"2025-07-09T15:12:33.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"tuonioooo\\",\\"url\\":\\"/\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/linux/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E4%B8%8E%E5%8C%85%E7%AE%A1%E7%90%86/nginx-add-video-module.html"}],["meta",{"property":"og:site_name","content":"tuonioooo's DevOps Docs"}],["meta",{"property":"og:title","content":"nginx视频模块-流媒体服务配置"}],["meta",{"property":"og:description","content":"Nginx添加MP4、FLV模块教程 概述 本教程介绍如何在已安装的Nginx服务器中添加MP4和FLV流媒体模块，以支持视频文件的HTTP流式传输。 前提条件 已安装的Nginx服务器 具有root权限 保留原始Nginx安装目录和源码 步骤详解 1. 查看当前Nginx编译参数 首先查看当前Nginx的编译配置，以确保新编译时保持原有功能： 示例输..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-09T15:12:33.000Z"}],["meta",{"property":"article:tag","content":"流媒体"}],["meta",{"property":"article:tag","content":"视频模块"}],["meta",{"property":"article:tag","content":"nginx"}],["meta",{"property":"article:published_time","content":"2022-09-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-09T15:12:33.000Z"}]]},"git":{"createdTime":1752073953000,"updatedTime":1752073953000,"contributors":[{"name":"tuonioooo","username":"tuonioooo","email":"daizhaoman@sina.com","commits":1,"url":"https://github.com/tuonioooo"}]},"readingTime":{"minutes":3.28,"words":985},"filePathRelative":"linux/软件安装与包管理/nginx-add-video-module.md","excerpt":"\\n<h2>概述</h2>\\n<p>本教程介绍如何在已安装的Nginx服务器中添加MP4和FLV流媒体模块，以支持视频文件的HTTP流式传输。</p>\\n<h2>前提条件</h2>\\n<ul>\\n<li>已安装的Nginx服务器</li>\\n<li>具有root权限</li>\\n<li>保留原始Nginx安装目录和源码</li>\\n</ul>\\n<h2>步骤详解</h2>\\n<h3>1. 查看当前Nginx编译参数</h3>\\n<p>首先查看当前Nginx的编译配置，以确保新编译时保持原有功能：</p>\\n<div class=\\"language-bash line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"bash\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code class=\\"language-bash\\"><span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">nginx</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -V</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{p as comp,o as data};
