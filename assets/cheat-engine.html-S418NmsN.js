import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as n,o as e}from"./app-Chw5Q7wx.js";const l={};function t(h,i){return e(),a("div",null,i[0]||(i[0]=[n(`<h1 id="游戏修改器技术原理" tabindex="-1"><a class="header-anchor" href="#游戏修改器技术原理"><span>游戏修改器技术原理</span></a></h1><h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>游戏修改器是一类用于分析和修改计算机程序内存的工具，主要用于软件逆向工程、调试和教育目的。本文档介绍其基本技术原理，仅供学习研究使用。</p><h2 id="主要工具" tabindex="-1"><a class="header-anchor" href="#主要工具"><span>主要工具</span></a></h2><h3 id="cheat-engine" tabindex="-1"><a class="header-anchor" href="#cheat-engine"><span>Cheat Engine</span></a></h3><ul><li><strong>项目地址</strong>: <a href="https://github.com/cheat-engine/cheat-engine" target="_blank" rel="noopener noreferrer">https://github.com/cheat-engine/cheat-engine</a></li><li><strong>版本</strong>: 7.5 及以上</li><li><strong>特点</strong>: 开源、功能完整的内存编辑器</li></ul><h2 id="技术原理" tabindex="-1"><a class="header-anchor" href="#技术原理"><span>技术原理</span></a></h2><h3 id="_1-内存扫描技术" tabindex="-1"><a class="header-anchor" href="#_1-内存扫描技术"><span>1. 内存扫描技术</span></a></h3><ul><li><strong>精确值扫描</strong>: 搜索内存中的特定数值</li><li><strong>模糊扫描</strong>: 当不知道确切数值时的搜索方法</li><li><strong>指针扫描</strong>: 追踪动态内存地址的指针链</li></ul><h3 id="_2-进程附加机制" tabindex="-1"><a class="header-anchor" href="#_2-进程附加机制"><span>2. 进程附加机制</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>进程选择 → 内存映射 → 权限获取 → 数据读写</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_3-代码注入技术" tabindex="-1"><a class="header-anchor" href="#_3-代码注入技术"><span>3. 代码注入技术</span></a></h3><ul><li><strong>DLL注入</strong>: 将动态链接库注入到目标进程</li><li><strong>代码洞技术</strong>: 在程序中找到未使用的内存空间</li><li><strong>汇编指令修改</strong>: 直接修改程序的机器码</li></ul><h2 id="安装与配置" tabindex="-1"><a class="header-anchor" href="#安装与配置"><span>安装与配置</span></a></h2><h3 id="基本安装步骤" tabindex="-1"><a class="header-anchor" href="#基本安装步骤"><span>基本安装步骤</span></a></h3><ol><li>从官方GitHub下载最新版本</li><li>运行安装程序（注意杀毒软件可能误报）</li><li>选择合适的安装选项</li></ol><h3 id="中文化配置" tabindex="-1"><a class="header-anchor" href="#中文化配置"><span>中文化配置</span></a></h3><p>参考教程链接：</p><ul><li>详细安装教程：<a href="https://blog.csdn.net/weixin_50964512/article/details/123565807" target="_blank" rel="noopener noreferrer">CSDN教程1</a></li><li>配置指南： <ul><li><a href="https://blog.csdn.net/zhaobisheng1/article/details/79259460" target="_blank" rel="noopener noreferrer">CSDN教程2</a></li><li><a href="https://blog.csdn.net/weixin_50964512/article/details/123565807" target="_blank" rel="noopener noreferrer">指南2</a></li></ul></li></ul><h2 id="核心功能模块" tabindex="-1"><a class="header-anchor" href="#核心功能模块"><span>核心功能模块</span></a></h2><h3 id="_1-内存查看器" tabindex="-1"><a class="header-anchor" href="#_1-内存查看器"><span>1. 内存查看器</span></a></h3><ul><li>十六进制显示</li><li>数据类型转换</li><li>内存区域映射</li></ul><h3 id="_2-调试器功能" tabindex="-1"><a class="header-anchor" href="#_2-调试器功能"><span>2. 调试器功能</span></a></h3><ul><li>断点设置</li><li>单步执行</li><li>寄存器查看</li></ul><h3 id="_3-脚本系统" tabindex="-1"><a class="header-anchor" href="#_3-脚本系统"><span>3. 脚本系统</span></a></h3><ul><li>Lua脚本支持</li><li>自动化操作</li><li>复杂逻辑实现</li></ul><h2 id="高级技术概念" tabindex="-1"><a class="header-anchor" href="#高级技术概念"><span>高级技术概念</span></a></h2><h3 id="句柄操作-lookhandles" tabindex="-1"><a class="header-anchor" href="#句柄操作-lookhandles"><span>句柄操作 (LookHandles)</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>作用：解决系统级窗口管理问题</span></span>
<span class="line"><span>原理：通过句柄枚举和操作实现窗口控制</span></span>
<span class="line"><span>应用：处理顽固弹窗等系统问题</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="反检测技术" tabindex="-1"><a class="header-anchor" href="#反检测技术"><span>反检测技术</span></a></h3><p>游戏厂商通常会部署反作弊系统，技术研究包括：</p><ol><li><p><strong>进程隐藏</strong></p><ul><li>修改进程名称</li><li>伪装进程特征</li></ul></li><li><p><strong>API Hook绕过</strong></p><ul><li>底层系统调用</li><li>直接内存访问</li></ul></li><li><p><strong>源码编译定制</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>工具链：Lazarus IDE v1.4.4</span></span>
<span class="line"><span>源码路径：CheatEngine64/src/CheatEngine/</span></span>
<span class="line"><span>编译文件：cheatengine.lpi</span></span>
<span class="line"><span>输出：定制化可执行文件</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="编程接口" tabindex="-1"><a class="header-anchor" href="#编程接口"><span>编程接口</span></a></h2><h3 id="基本api结构" tabindex="-1"><a class="header-anchor" href="#基本api结构"><span>基本API结构</span></a></h3><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cpp"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 伪代码示例</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> MemoryEditor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    bool</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> AttachProcess</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> processId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    bool</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> ReadMemory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">void*</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">void*</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> buffer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">size_t</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> size</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    bool</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> WriteMemory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">void*</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">void*</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">size_t</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> size</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    std::</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">vector</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ScanMemory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">DataType</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Value</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="脚本接口示例" tabindex="-1"><a class="header-anchor" href="#脚本接口示例"><span>脚本接口示例</span></a></h3><div class="language-lua line-numbers-mode" data-highlighter="shiki" data-ext="lua" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-lua"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- Lua脚本示例</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> findHealthValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> results</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">AOBScan</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;89 ?? ?? ?? ?? ?? C3&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> results</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> then</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        -- 处理搜索结果</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> results</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    end</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> nil</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">end</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>1）.LookHandles</span></span>
<span class="line"><span>句柄解决windows右下角顽固弹窗的方法</span></span>
<span class="line"><span>2）.cheatengine如何避开腾讯游戏检测</span></span>
<span class="line"><span>1、下载并解压CE6.4的源代码，再下载lazarusv1.4.4并安装。</span></span>
<span class="line"><span>2、进入到CE源代码解压目录CheatEngine64srcCheatEngine里面，找到cheatengine.lpi，双击，点lazarus左上角的searchFindinFiles，然后在弹出来的搜索框里输入MainUnit2，选上where里面的searchallfilesinproject，开始Find。</span></span>
<span class="line"><span>3、弹出源码界面，按Shift+F9，看到CheatEngine64src\\CheatEngine\\bin里面有一个我们图标的cheatengine-i386.exe即可避开腾讯游戏检测。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="学习与研究方向" tabindex="-1"><a class="header-anchor" href="#学习与研究方向"><span>学习与研究方向</span></a></h2><h3 id="合法应用场景" tabindex="-1"><a class="header-anchor" href="#合法应用场景"><span>合法应用场景</span></a></h3><ol><li><strong>软件调试</strong>: 分析程序Bug和性能问题</li><li><strong>逆向工程教育</strong>: 理解程序结构和算法</li><li><strong>安全研究</strong>: 发现和修复安全漏洞</li><li><strong>兼容性测试</strong>: 软件在不同环境下的表现</li></ol><h3 id="技能发展路径" tabindex="-1"><a class="header-anchor" href="#技能发展路径"><span>技能发展路径</span></a></h3><ol><li><p><strong>基础知识</strong></p><ul><li>C/C++编程</li><li>汇编语言</li><li>操作系统原理</li></ul></li><li><p><strong>进阶技能</strong></p><ul><li>调试技术</li><li>反汇编分析</li><li>加密与反加密</li></ul></li><li><p><strong>专业应用</strong></p><ul><li>恶意软件分析</li><li>软件安全审计</li><li>系统级编程</li></ul></li></ol><h2 id="注意事项与法律考量" tabindex="-1"><a class="header-anchor" href="#注意事项与法律考量"><span>注意事项与法律考量</span></a></h2><h3 id="使用限制" tabindex="-1"><a class="header-anchor" href="#使用限制"><span>使用限制</span></a></h3><ul><li>仅用于个人学习和研究</li><li>不得用于商业软件的非法修改</li><li>遵守软件许可协议和服务条款</li></ul><h3 id="技术伦理" tabindex="-1"><a class="header-anchor" href="#技术伦理"><span>技术伦理</span></a></h3><ul><li>尊重知识产权</li><li>不损害他人利益</li><li>促进技术进步和安全改善</li></ul><h2 id="相关资源" tabindex="-1"><a class="header-anchor" href="#相关资源"><span>相关资源</span></a></h2><h3 id="学习资料" tabindex="-1"><a class="header-anchor" href="#学习资料"><span>学习资料</span></a></h3><ul><li>《逆向工程核心原理》</li><li>《Windows内核编程》</li><li>《汇编语言程序设计》</li></ul><h3 id="开发工具" tabindex="-1"><a class="header-anchor" href="#开发工具"><span>开发工具</span></a></h3><ul><li>OllyDbg: 动态调试器</li><li>IDA Pro: 静态分析工具</li><li>x64dbg: 64位调试器</li></ul><h3 id="社区论坛" tabindex="-1"><a class="header-anchor" href="#社区论坛"><span>社区论坛</span></a></h3><ul><li>GitHub开源社区</li><li>安全研究论坛</li><li>编程技术社区</li></ul><hr><p><strong>免责声明</strong>: 本文档仅供教育和研究目的。使用相关技术时请遵守当地法律法规，尊重软件版权，不得用于任何非法活动。</p>`,57)]))}const d=s(l,[["render",t]]),k=JSON.parse(`{"path":"/script/other/cheat-engine.html","title":"游戏修改器技术原理","lang":"zh-CN","frontmatter":{"title":"游戏修改器技术原理","category":["脚本开发"],"tag":["Cheat Engine"],"date":"2023-07-10T00:00:00.000Z","description":"游戏修改器技术原理 概述 游戏修改器是一类用于分析和修改计算机程序内存的工具，主要用于软件逆向工程、调试和教育目的。本文档介绍其基本技术原理，仅供学习研究使用。 主要工具 Cheat Engine 项目地址: https://github.com/cheat-engine/cheat-engine 版本: 7.5 及以上 特点: 开源、功能完整的内存编...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"游戏修改器技术原理\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-07-10T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-02T10:09:34.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"tuonioooo\\",\\"url\\":\\"/\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/devops-docs/script/other/cheat-engine.html"}],["meta",{"property":"og:site_name","content":"tuonioooo's DevOps Docs"}],["meta",{"property":"og:title","content":"游戏修改器技术原理"}],["meta",{"property":"og:description","content":"游戏修改器技术原理 概述 游戏修改器是一类用于分析和修改计算机程序内存的工具，主要用于软件逆向工程、调试和教育目的。本文档介绍其基本技术原理，仅供学习研究使用。 主要工具 Cheat Engine 项目地址: https://github.com/cheat-engine/cheat-engine 版本: 7.5 及以上 特点: 开源、功能完整的内存编..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-02T10:09:34.000Z"}],["meta",{"property":"article:tag","content":"Cheat Engine"}],["meta",{"property":"article:published_time","content":"2023-07-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-02T10:09:34.000Z"}]]},"git":{"createdTime":1754129374000,"updatedTime":1754129374000,"contributors":[{"name":"tuonioooo","username":"tuonioooo","email":"daizhaoman@sina.com","commits":1,"url":"https://github.com/tuonioooo"}]},"readingTime":{"minutes":3.77,"words":1130},"filePathRelative":"script/other/cheat-engine.md","excerpt":"\\n<h2>概述</h2>\\n<p>游戏修改器是一类用于分析和修改计算机程序内存的工具，主要用于软件逆向工程、调试和教育目的。本文档介绍其基本技术原理，仅供学习研究使用。</p>\\n<h2>主要工具</h2>\\n<h3>Cheat Engine</h3>\\n<ul>\\n<li><strong>项目地址</strong>: <a href=\\"https://github.com/cheat-engine/cheat-engine\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://github.com/cheat-engine/cheat-engine</a></li>\\n<li><strong>版本</strong>: 7.5 及以上</li>\\n<li><strong>特点</strong>: 开源、功能完整的内存编辑器</li>\\n</ul>","autoDesc":true}`);export{d as comp,k as data};
